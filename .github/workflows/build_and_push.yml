name: CD - Push Docker Image to GHCR

on:
  push:
    tags:
      - "v*"

env:
  GHCR_IMAGE: ghcr.io/kharon-labs/kharon-user-management:${{ github.ref_name }}

jobs:
  build-and-push:
    permissions:
      contents: write
      packages: write
    runs-on: ubuntu-24.04

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up QEMU (for multi-arch builds)
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # üîç Smoke test using linux/amd64 only
      - name: Build test image (amd64 only)
        run: |
          docker buildx build \
            --platform linux/amd64 \
            --load \
            -t local-test-image \
            -t $GHCR_IMAGE \
            .

      - name: Run smoke test before push
        run: |
          echo "üîç Running config sanity check..."
          docker run --rm \
            -e PORT=8001 \
            -e DATABASE_URL=dummy \
            -e JWT_SECRET=dummy \
            -e IP_INFO_TOKEN=dummy \
            -e FLUTTERWAVE_SECRET_KEY=dummy \
            -e FLUTTERWAVE_PAYMENT_URL=https://dummy \
            -e FLUTTERWAVE_CALLBACK_URL=https://dummy \
            -e FLUTTERWAVE_SECRET_HASH=dummy \
            local-test-image || (echo "‚ùå Image did not run successfully!" && exit 1)

      # üöÄ Real build and push for both archs
      - name: Build and push multi-arch image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          platforms: linux/amd64,linux/arm64
          tags: ${{ env.GHCR_IMAGE }}
          provenance: false

      - name: Output success
        run: echo "‚úÖ Image pushed to GHCR as $GHCR_IMAGE"

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref_name }}
          name: Release ${{ github.ref_name }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
