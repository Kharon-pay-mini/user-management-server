name: CD - KharonPay Registration Server

on:
  push:
    tags:
      - "v*"

env:
  CARGO_TERM_COLOR: always
  GHCR_IMAGE: ghcr.io/kharon-labs/kharon-server:${{ github.ref_name }}

jobs:
  build-test-push:
    permissions:
      contents: write
      packages: write
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: ${{ secrets.PROD_DB_USER }}
          POSTGRES_PASSWORD: ${{ secrets.PROD_DB_PASSWORD }}
          POSTGRES_DB: ${{ secrets.PROD_DB_NAME }}
        ports:
          - "5432:5432"

    steps:
      - uses: actions/checkout@v4

      - name: Setup environment variables
        run: |
          echo "DATABASE_URL=${{ secrets.PROD_DATABASE_URL }}" >> $GITHUB_ENV

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          override: true

      - name: Cache cargo dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Build and test
        run: |
          cargo build --release
          cargo test --release

      - name: Run migrations
        run: |
          cargo install diesel_cli --no-default-features --features postgres
          diesel migration run --database-url ${{ secrets.PROD_DATABASE_URL }}

      - name: Trigger Render Deploy via API
        id: deploy
        run: |
          RESPONSE=$(curl -s -X POST https://api.render.com/v1/services/${{ secrets.RENDER_SERVICE_ID }}/deploys \
            -H "Authorization: Bearer ${{ secrets.RENDER_API_KEY }}" \
            -H "Accept: application/json")

          DEPLOY_ID=$(echo "$RESPONSE" | jq -r '.id')
          echo "Triggered Deploy ID: $DEPLOY_ID"

          # Poll for status
          for i in {1..50}; do
            STATUS=$(curl -s https://api.render.com/v1/services/${{ secrets.RENDER_SERVICE_ID }}/deploys/$DEPLOY_ID \
              -H "Authorization: Bearer ${{ secrets.RENDER_API_KEY }}" | jq -r '.status')

            echo "Status: $STATUS"

            if [[ "$STATUS" == "live" ]]; then
              echo "✅ Deploy succeeded"
              exit 0
            elif [[ "$STATUS" == "failed" ]]; then
              echo "❌ Deploy failed"
              exit 1
            fi

            sleep 20
          done

          echo "Timed out waiting for deployment"
          exit 1

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref_name }}
          name: Release ${{ github.ref_name }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ env.GHCR_IMAGE }}
          labels: |
            org.opencontainers.image.source=${{ github.repository_url }}
